// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                 String    @id @default(cuid())
  name               String?
  last_name          String
  email              String?   @unique
  email_verified     DateTime?
  password           String
  image              String?
  state              State
  verification_token String?
  role_id            String?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @default(now()) @updatedAt

  role Roles? @relation(fields: [role_id], references: [id])

  daily_incomecuts DailyIncomeCuts[]
  daily_movement   DailyMovementNovelties[]

  @@map("tbl_users")
}

model DailyIncomeCuts {
  id          String   @id @default(cuid())
  user_id     String
  amount      Float
  category_id String
  comment     String?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  user     Users      @relation(fields: [user_id], references: [id])
  category References @relation(fields: [category_id], references: [id])

  @@map("tbl_daily_income_cuts")
}

model DailyMovementNovelties {
  id          String   @id @default(cuid())
  user_id     String
  amount      Float
  comment     String?
  category_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  category References @relation(fields: [category_id], references: [id])
  user     Users      @relation(fields: [user_id], references: [id])

  @@map("tbl_daily_movement_novelties")
}

model References {
  id                String                   @id @default(cuid())
  created_at        DateTime                 @default(now())
  updated_at        DateTime                 @default(now()) @updatedAt
  state             State
  domain            String
  range_value       String
  description       String?
  optional          String?
  daily_movement    DailyMovementNovelties[]
  daily_income_cuts DailyIncomeCuts[]

  @@map("tbl_references")
}

model Roles {
  id         String   @id @default(cuid())
  name       String   @unique
  state      State    @default(enabled)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Users                     Users[]
  roles_modules_permissions RolesModulesPermissions[]

  @@map("tbl_roles")
}

model Modules {
  id                        String                    @id @default(cuid())
  parent_id                 String?
  name                      String                    @unique
  label                     String
  icon                      String
  url                       String?
  state                     State                     @default(enabled)
  created_at                DateTime                  @default(now())
  updated_at                DateTime                  @default(now()) @updatedAt
  roles_modules_permissions RolesModulesPermissions[]

  @@map("tbl_modules")
}

model RolesModulesPermissions {
  role        Roles    @relation(fields: [role_id], references: [id])
  role_id     String
  module      Modules  @relation(fields: [module_id], references: [id])
  module_id   String
  permissions String[]

  @@id([role_id, module_id])
  @@map("tbl_roles_modules")
}

enum State {
  enabled
  disabled
}
